[{"/home/minkaron/sadantus/main-site/src/index.js":"1","/home/minkaron/sadantus/main-site/src/reportWebVitals.js":"2","/home/minkaron/sadantus/main-site/src/App.js":"3","/home/minkaron/sadantus/main-site/src/components/ServerInfo/ServerInfo.js":"4","/home/minkaron/sadantus/main-site/src/utils/serverService.js":"5","/home/minkaron/sadantus/main-site/src/components/SideBar/SideBar.js":"6","/home/minkaron/sadantus/main-site/src/components/ServerBar/ServerBar.js":"7"},{"size":500,"mtime":1609363785383,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1609363785383,"results":"10","hashOfConfig":"9"},{"size":832,"mtime":1610745799412,"results":"11","hashOfConfig":"9"},{"size":361,"mtime":1610744908841,"results":"12","hashOfConfig":"9"},{"size":519,"mtime":1610519704919,"results":"13","hashOfConfig":"9"},{"size":350,"mtime":1610742832349,"results":"14","hashOfConfig":"9"},{"size":338,"mtime":1610745766853,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"9qg1fh",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"/home/minkaron/sadantus/main-site/src/index.js",[],["33","34"],"/home/minkaron/sadantus/main-site/src/reportWebVitals.js",[],"/home/minkaron/sadantus/main-site/src/App.js",[],"/home/minkaron/sadantus/main-site/src/components/ServerInfo/ServerInfo.js",[],"/home/minkaron/sadantus/main-site/src/utils/serverService.js",["35"],"function pollAllServers() {\n\treturn fetch('/api/servers/', {\n\t\tmethod: 'GET',\n\t\theaders: new Headers({ 'Content-Type': 'application/json'})\n\t}).then(res => {\n\t\tif(res.ok) return res.json();\n\t\tthrow new Error('Polling Error');\n\t});\n}\n\nfunction pollServer(id) {\n\treturn fetch(`/api/servers/${id}`, {\n\t\tmethod: 'GET',\n\t\theaders: new Headers({ 'Content-Type': 'application/json'})\n\t}).then(res => {\n\t\tif(res.ok) return res.json();\n\t\tthrow new Error('Polling Error');\n\t});\n}\n\nexport default {\n\tpollAllServers,\n\tpollServer\n}\n","/home/minkaron/sadantus/main-site/src/components/SideBar/SideBar.js",[],"/home/minkaron/sadantus/main-site/src/components/ServerBar/ServerBar.js",["36","37"],"import React from 'react';\n\nimport ServerInfo from '../ServerInfo/ServerInfo';\n\nimport './ServerBar.css';\n\nconst ServerBar = ({serverList}) => {\n\treturn (\n\t\t<div className='server-container'>\n        \t\t{serverList.map((server) => {\n                \t\treturn (<ServerInfo server={server} />)\n\t\t\t})}\n\t\t</div>\n\t)\n}\n\nexport default ServerBar;\n",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":21,"column":1,"nodeType":"44","endLine":24,"endColumn":2},{"ruleId":"45","severity":1,"message":"46","line":1,"column":8,"nodeType":"47","messageId":"48","endLine":1,"endColumn":13},{"ruleId":"45","severity":1,"message":"49","line":3,"column":8,"nodeType":"47","messageId":"48","endLine":3,"endColumn":18},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'ServerInfo' is defined but never used.","no-global-assign","no-unsafe-negation"]